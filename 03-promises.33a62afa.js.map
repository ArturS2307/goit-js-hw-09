{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,kBACrCE,YAAaH,SAASC,cAAc,iBACpCG,SAAUJ,SAASC,cAAc,mBACjCI,IAAKL,SAASC,cAAc,iBAwB9B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAACH,WAAUC,UAGrBG,EAAO,CAACJ,WAAUC,S,GACjBA,E,IA/BPV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAMC,GAAmBrB,EAAKI,aAAakB,MACrCC,GAAkBvB,EAAKK,YAAYiB,MACnCE,GAAexB,EAAKM,SAASgB,MAE3BG,EAAE,EAAGA,EAAED,EAAaC,GAAG,EAAG,CAIhCjB,EAHeiB,EAAE,EACLJ,EAAkBI,EAAEF,GAEDG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAC/CkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IACrEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACpBkB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelayEl: document.querySelector('[name=\"delay\"]'),\n  delayStepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('.form button'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const firstDelayValue = +refs.firstDelayEl.value;\n  const delayStepValue = +refs.delayStepEl.value;\n  const amountValue = +refs.amountEl.value;\n\n  for(let i=0; i<amountValue; i+=1) {\n    let position = i+1;\n    let delay = firstDelayValue + i*delayStepValue;\n\n    createPromise(position, delay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } \n      \n      reject({position, delay});\n    }, delay)\n  })\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelayEl","delayStepEl","amountEl","btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","firstDelayValue","value","delayStepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.33a62afa.js.map"}